{"version":3,"sources":["App.tsx","reportWebVitals.ts","theme.ts","index.tsx","TilesetConverter.tsx","Viewer.tsx","Dropper.tsx"],"names":["window","location","search","slice","split","reduce","p","c","k","v","page","TilesetConverter","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","palette","primary","main","secondary","background","default","typography","fontFamily","join","fontSize","h1","h2","h3","h4","h5","h6","ReactDOM","render","ThemeProvider","CssBaseline","App","document","getElementById","useState","files","setFiles","importedBitmap","setImportedBitmap","useMemo","Promise","all","filter","file","type","map","a","arrayBuffer","ab","filename","name","blob","Blob","bitmap","bmp","decode","Buffer","from","res","style","length","display","key","id","width","height","createCanvasFromImageData","imageData","canvas","createElement","getContext","putImageData","Viewer","idWord","context","setContext","warn","setWarn","useEffect","console","log","warnStuck","image","Image","src","URL","createObjectURL","onload","imageSmoothingEnabled","drawImage","getImageData","p0","i","data","red","green","blue","alterCanvas","clearRect","grayImageData","originWidth","originHeight","probablyGray","getGrayImageData","originalImageData","color","x","border","imageRendering","backgroundImage","process","onContextMenu","e","preventDefault","target","toBlob","b","url","open","revokeObjectURL","onClick","link","toDataURL","download","match","encodeURIComponent","click","Dropper","isDropped","fileObjects","onAdd","filesLimit"],"mappings":"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","file":"static/js/main.d6585b1f.chunk.js","sourcesContent":["import { Fragment } from \"react\";\nimport TilesetConverter from \"./TilesetConverter\";\n\nconst getSearch = (): { page?: string } | null =>\n  window.location.search === \"\"\n    ? null\n    : window.location.search\n        .slice(1)\n        .split(\"&\")\n        .reduce((p, c) => {\n          const [k, v] = c.split(\"=\");\n          return { ...p, [k]: v };\n        }, {});\n\nexport default () => {\n  return (\n    <Fragment>\n      {(() => {\n        switch (getSearch()?.page) {\n          case \"tc\":\n            return <TilesetConverter />;\n          default:\n            return (\n              <ul>\n                <li>\n                  <a href=\"?page=tc\">タイルセットコンバーター</a>を開く\n                </li>\n              </ul>\n            );\n        }\n      })()}\n    </Fragment>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\n// サイトのベースとなる独自のテーマを作成する\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#1976d2\", //サイト内で使える任意のprimary color\n    },\n    secondary: {\n      main: \"#dc004e\", //サイト内で使える任意のsecondary color\n    },\n    background: {\n      default: \"#fffafa\", // 背景色を設定出来る。何も設定しなければ白\n    },\n  },\n  typography: {\n    fontFamily: [\"sans-serif\"].join(\",\"),\n    fontSize: 12,\n    h1: {\n      fontSize: \"1.75rem\",\n    },\n    h2: {\n      fontSize: \"1.5rem\",\n    },\n    h3: {\n      fontSize: \"1.25rem\",\n    },\n    h4: {\n      fontSize: \"1.125rem\",\n    },\n    h5: {\n      fontSize: \"1rem\",\n    },\n    h6: {\n      fontSize: \"1rem\",\n    },\n  },\n});\n\nexport default theme;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ThemeProvider, CssBaseline } from \"@material-ui/core\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { Container } from \"@material-ui/core\";\nimport { FileObject } from \"material-ui-dropzone\";\nimport { useState, useMemo, Fragment } from \"react\";\nimport bmp from \"bmp-js\";\nimport Viewer from \"./Viewer\";\nimport { ImportedBimap } from \"./types\";\nimport Dropper from \"./Dropper\";\n\nexport default () => {\n  const [files, setFiles] = useState<FileObject[]>([]);\n  const [importedBitmap, setImportedBitmap] = useState<ImportedBimap[]>([]);\n  useMemo(\n    () =>\n      Promise.all(\n        files\n          .filter(({ file }) => file.type === \"image/bmp\")\n          .map(async ({ file }) => {\n            const ab = await file.arrayBuffer();\n            return {\n              filename: file.name,\n              blob: new Blob([ab], { type: \"image/bmp\" }),\n              bitmap: bmp.decode(Buffer.from(ab)),\n            };\n          })\n      ).then((res) => setImportedBitmap(res)),\n    [files]\n  );\n  return (\n    <Fragment>\n      <Container>\n        <h3>使い方</h3>\n        <ul>\n          <li>1. BMP ファイルを D&D する（複数可）</li>\n          <li>2. プレビューが出てくる</li>\n          <li>\n            3.\n            プレビューをクリックするとダウンロード、右クリックすると別窓表示できる\n          </li>\n          <li>やりなおす場合は更新(F5)</li>\n        </ul>\n        <h3>タイルそれぞれの情報</h3>\n        <ul>\n          <li>A1: 256x192 海などのアニメーションタイル</li>\n          <li>A2: 256x192 地面のオートタイル</li>\n          <li>A3: 256x128 外観の建物のオートタイル</li>\n          <li>A4: 256x240 内装の壁と天井のオートタイル</li>\n          <li>\n            A5: <b>128</b>x256 その他の下層タイル\n          </li>\n          <li>\n            B: 256x256 上層タイル（<b>一番左上のタイルは強制的に空白になる</b>）\n          </li>\n          <li>C,D,E: 256x256 その他の上層タイル</li>\n        </ul>\n        <Dropper files={files} setFiles={setFiles} />\n        <div style={!importedBitmap.length ? { display: \"none\" } : {}}>\n          {importedBitmap.map(({ filename, blob, bitmap }, key) => (\n            <Viewer\n              key={key}\n              id={key}\n              filename={filename}\n              blob={blob}\n              bitmap={bitmap}\n              width={bitmap.width}\n              height={bitmap.height}\n            ></Viewer>\n          ))}\n        </div>\n      </Container>\n    </Fragment>\n  );\n};\n","import { FC, useState, Fragment, useEffect } from \"react\";\nimport { BmpDecoder } from \"bmp-js\";\nimport { ImportedBimap } from \"./types\";\n\nconst createCanvasFromImageData = (imageData: ImageData) => {\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = imageData.width;\n  canvas.height = imageData.height;\n  canvas.getContext(\"2d\")!.putImageData(imageData, 0, 0);\n  return canvas;\n};\n\nconst getGrayImageData = (\n  context: CanvasRenderingContext2D,\n  originWidth: number,\n  originHeight: number\n) => {\n  const probablyGray = context.getImageData(\n    originWidth / 2,\n    0,\n    originWidth / 2,\n    originHeight\n  );\n  for (let i = 0; i < probablyGray.data.length; i += 4) {\n    if (\n      !(\n        probablyGray.data[i] === probablyGray.data[i + 1] &&\n        probablyGray.data[i + 1] === probablyGray.data[i + 2] &&\n        probablyGray.data[i] === probablyGray.data[i + 2]\n      )\n    )\n      return null;\n  }\n  return probablyGray;\n};\n\nconst Viewer: FC<{\n  id: number;\n  filename: ImportedBimap[\"filename\"];\n  blob: ImportedBimap[\"blob\"];\n  bitmap: BmpDecoder;\n  width: number;\n  height: number;\n}> = ({ id, filename, blob, width, height, bitmap }) => {\n  const idWord = `viewer-${id}`;\n  const [context, setContext] = useState<CanvasRenderingContext2D | null>(null);\n  const [warn, setWarn] = useState<string[]>([]);\n  useEffect(() => {\n    console.log(1);\n    setContext(\n      (document.getElementById(idWord) as HTMLCanvasElement).getContext(\"2d\")\n    );\n  }, []);\n  useEffect(() => {\n    let warnStuck: string[] = [];\n    if (!context) return;\n    console.log(2);\n    const image = new Image();\n    image.src = URL.createObjectURL(blob);\n    image.onload = () => {\n      context.imageSmoothingEnabled = false;\n      context.drawImage(image, 0, 0);\n      if (bitmap.palette?.[0]) {\n        const imageData = context.getImageData(0, 0, width, height);\n        context.putImageData(imageData, 0, 0);\n        const p0 = bitmap.palette[0];\n        for (let i = 0; i < imageData.data.length; i += 4) {\n          imageData.data[i + 3] =\n            imageData.data[i] === p0.red &&\n            imageData.data[i + 1] === p0.green &&\n            imageData.data[i + 2] === p0.blue\n              ? 0\n              : imageData.data[i + 3];\n        }\n        context.putImageData(imageData, 0, 0);\n        const alterCanvas = createCanvasFromImageData(imageData);\n        context.clearRect(0, 0, width, height);\n        context.drawImage(alterCanvas, 0, 0, width * 3, height * 3);\n      } else {\n        const grayImageData =\n          width <= 512 ? getGrayImageData(context, width, height) : null;\n        if (grayImageData) {\n          console.log(\"g\");\n          const originalImageData = context.getImageData(\n            0,\n            0,\n            width / 2,\n            height\n          );\n          const grayImageData = context.getImageData(\n            width / 2,\n            0,\n            width / 2,\n            height\n          );\n          for (let i = 0; i < originalImageData.data.length; i += 4) {\n            originalImageData.data[i + 3] = grayImageData.data[i];\n          }\n          const alterCanvas = createCanvasFromImageData(originalImageData);\n          context.clearRect(0, 0, width, height);\n          context.canvas.width /= 2;\n          context.imageSmoothingEnabled = false;\n          context.drawImage(\n            alterCanvas,\n            0,\n            0,\n            originalImageData.width * 3,\n            originalImageData.height * 3\n          );\n        } else {\n          width <= 512 &&\n            (warnStuck = [\n              ...warnStuck,\n              \"透過情報が見つからない。パレット0番に透過色を置くか、画像の右半分にグレースケールの透過情報を定義する必要がある。\",\n            ]);\n          context.drawImage(image, 0, 0, width * 3, height * 3);\n        }\n        (image.width > (grayImageData ? 512 : 256) || image.height > 256) &&\n          (warnStuck = [\n            ...warnStuck,\n            \"サイズでかすぎ。B～Eでも 256x256 （グレー込なら 512x256） が限度。\",\n          ]);\n        (image.width < 128 || image.height < 192) &&\n          (warnStuck = [...warnStuck, \"サイズ小さすぎ。\"]);\n        (image.width % 16 !== 0 || image.height % 16 !== 0) &&\n          (warnStuck = [\n            ...warnStuck,\n            \"サイズが中途半端。大きさは 16 の倍数である必要がある。\",\n          ]);\n      }\n      setWarn(warnStuck);\n    };\n  }, [context]);\n  return (\n    <Fragment>\n      <hr />\n      <p>{filename}</p>\n      {warn.length ? (\n        <div style={{ color: \"red\" }}>\n          <h3>警告</h3>\n          <ul>\n            {warn.map((x, key) => (\n              <li key={key}>{x}</li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <Fragment />\n      )}\n      <canvas\n        style={{\n          border: 0,\n          imageRendering: \"pixelated\",\n          backgroundImage: `url(${process.env.PUBLIC_URL}/backgrid.gif)`,\n        }}\n        id={idWord}\n        width={width * 3}\n        height={height * 3}\n        onContextMenu={(e) => {\n          e.preventDefault();\n          const canvas = e.target as HTMLCanvasElement;\n          canvas.toBlob((b) => {\n            const url = URL.createObjectURL(b);\n            window.open(url);\n            URL.revokeObjectURL(url);\n          });\n        }}\n        onClick={(e) => {\n          const canvas = e.target as HTMLCanvasElement;\n          const link = document.createElement(\"a\");\n          link.href = canvas.toDataURL(\"image/png\");\n          link.download =\n            (filename.match(/(^.*?)\\.[a-zA-Z0-9]*?$/)?.[1] ||\n              encodeURIComponent(filename)) + \".png\";\n          link.click();\n        }}\n      />\n    </Fragment>\n  );\n};\n\nexport default Viewer;\n","import { Container } from \"@material-ui/core\";\nimport { DropzoneAreaBase, FileObject } from \"material-ui-dropzone\";\nimport { FC, useMemo } from \"react\";\n\nconst Dropper: FC<{\n  files: FileObject[];\n  setFiles: (fileObject: FileObject[]) => void;\n}> = ({ files, setFiles }) => {\n  const isDropped = useMemo(() => files.length !== 0, [files]);\n  return (\n    <Container>\n      <div style={isDropped ? { display: \"none\" } : {}}>\n        <DropzoneAreaBase\n          fileObjects={files}\n          onAdd={setFiles}\n          filesLimit={100}\n        />\n      </div>\n    </Container>\n  );\n};\n\nexport default Dropper;\n"],"sourceRoot":""}